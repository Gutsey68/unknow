/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as authAuthRouteImport } from './routes/(auth)/_auth'

const authRouteImport = createFileRoute('/(auth)')()
const authAuthRegisterLazyRouteImport = createFileRoute(
  '/(auth)/_auth/register',
)()
const authAuthLoginLazyRouteImport = createFileRoute('/(auth)/_auth/login')()

const authRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authAuthRoute = authAuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => authRoute,
} as any)
const authAuthRegisterLazyRoute = authAuthRegisterLazyRouteImport
  .update({
    id: '/register',
    path: '/register',
    getParentRoute: () => authAuthRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/_auth.register.lazy').then((d) => d.Route),
  )
const authAuthLoginLazyRoute = authAuthLoginLazyRouteImport
  .update({
    id: '/login',
    path: '/login',
    getParentRoute: () => authAuthRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/_auth.login.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof authAuthRouteWithChildren
  '/login': typeof authAuthLoginLazyRoute
  '/register': typeof authAuthRegisterLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof authAuthRouteWithChildren
  '/login': typeof authAuthLoginLazyRoute
  '/register': typeof authAuthRegisterLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_auth': typeof authAuthRouteWithChildren
  '/(auth)/_auth/login': typeof authAuthLoginLazyRoute
  '/(auth)/_auth/register': typeof authAuthRegisterLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/register'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(auth)/_auth'
    | '/(auth)/_auth/login'
    | '/(auth)/_auth/register'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRoute: typeof authRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/_auth': {
      id: '/(auth)/_auth'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthRouteImport
      parentRoute: typeof authRoute
    }
    '/(auth)/_auth/register': {
      id: '/(auth)/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authAuthRegisterLazyRouteImport
      parentRoute: typeof authAuthRoute
    }
    '/(auth)/_auth/login': {
      id: '/(auth)/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authAuthLoginLazyRouteImport
      parentRoute: typeof authAuthRoute
    }
  }
}

interface authAuthRouteChildren {
  authAuthLoginLazyRoute: typeof authAuthLoginLazyRoute
  authAuthRegisterLazyRoute: typeof authAuthRegisterLazyRoute
}

const authAuthRouteChildren: authAuthRouteChildren = {
  authAuthLoginLazyRoute: authAuthLoginLazyRoute,
  authAuthRegisterLazyRoute: authAuthRegisterLazyRoute,
}

const authAuthRouteWithChildren = authAuthRoute._addFileChildren(
  authAuthRouteChildren,
)

interface authRouteChildren {
  authAuthRoute: typeof authAuthRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthRoute: authAuthRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRoute: authRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
